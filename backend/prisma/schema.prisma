// Prisma schema for user accounts
// Run `npx prisma migrate dev --name init` to create the SQLite database.

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String   // hashed with bcrypt
  createdAt DateTime @default(now())

  lists     WatchList[]
  /// Optional one-to-one link to user settings
  settings  Settings?
}

model WatchList {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  season    String
  year      Int
  mediaId   Int
  order     Int
  customName String?
  createdAt DateTime @default(now())

  /// Whether the user has marked this series as watched.
  watched Boolean @default(false)

  /// Timestamp when user marked series as watched (null = not watched yet)
  watchedAt DateTime?

  /// Optional ranking index set when watched=true.  Lower numbers appear at
  /// the top of the Watched ranking UI.  Null means no manual ranking (falls
  /// back to watchedAt ordering).
  watchedRank Int?
  hidden      Boolean @default(false)

  @@unique([userId, season, year, mediaId])
}

/// User-specific display & UI preferences
model Settings {
  /// FK to User.id, also PK
  userId          Int     @id
  /// Theme preference: LIGHT, NIGHT, SYSTEM, HIGH_CONTRAST
  theme           String  @default("SYSTEM")
  /// Title language preference: ENGLISH, ROMAJI, NATIVE
  titleLanguage   String  @default("ENGLISH")
  /// Whether to autoplay videos
  videoAutoplay   Boolean @default(true)
  /// Whether to hide user from compare nav
  hideFromCompare Boolean @default(false)

  user            User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
